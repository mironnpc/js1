/*
1) Дан код: 

var a = 1, b = 1, c, d;
c = ++a; alert(c); // 2
d = b++; alert(d); // 1
c = (2+ ++a); alert(c); // 5
d = (2+ b++); alert(d); // 4
alert(a); // 3
alert(b); // 3

Почему код даёт именно такие результаты?

ОТВЕТ:
var a = 1, b = 1, c, d;
c = ++a; alert(c); // 2
тут a и с = 2

d = b++; alert(d); // 1
Тут d = 1, а b = 2. Это потому что сначало идет присвоение d значения, а потом уже к b прибавляется единица

c = (2+ ++a); alert(c); // 5
a = 2 
Тут 5 потому что, сначало a увеличивается на единицу, потом к a=3 прибавляется 2 и мы получаем 5, 5 записывается в c

d = (2+ b++); alert(d); // 4
Тут 4 потому что, сначало к b = 2 прибавляется 2 и мы получаем 4, 4 записываем в d. после того как d = 4 мы увеличиваем b на единицу и получаем что b = 3

-------------------------------------------------------------------------------------------------------------------
2) Чему будет равен x в примере ниже?

var a = 2;
var x = 1 + (a *= 2);

ОТВЕТ:
x = 1 + (a = a * 2)

a = 4
x = 5

-------------------------------------------------------------------------------------------------------------------
3) Объявить две целочисленные переменные a и b и задать им произвольные начальные значения. Затем написать скрипт, который работает по следующему принципу:
* если a и b положительные, вывести их разность;
* если а и b отрицательные, вывести их произведение;
* если а и b разных знаков, вывести их сумму; 
ноль можно считать положительным числом.
*/

var a = -2;
var b = -3;

if (a >= 0 && b >= 0) {
    console.log("Разность: ", a - b);
} else if (a < 0 && b < 0) {
    console.log("Произведение: ", a * b);
} else {
    console.log("Сумма: ", a + b);
}

/*
-------------------------------------------------------------------------------------------------------------------
4) Присвоить переменной а значение в промежутке [0..15]. С помощью оператора switch организовать вывод чисел от a до 15.
*/

var d = 14;

switch (d) {
    case 1:
        console.log(1);
    case 2:
        console.log(2);
    case 3:
        console.log(3);
    case 4:
        console.log(4);
    case 5:
        console.log(5);
    case 6:
        console.log(6);
    case 7:
        console.log(7);
    case 8:
        console.log(8);
    case 9:
        console.log(9);
    case 10:
        console.log(10);
    case 11:
        console.log(11);
    case 12:
        console.log(12);
    case 13:
        console.log(13);
    case 14:
        console.log(14);
    case 15:
        console.log(15);
}

//-------------------------------------------------------------------------------------------------------------------
//5) Реализовать основные 4 арифметические операции в виде функций с двумя параметрами. Обязательно использовать оператор return.

function fSUM (x, y) {
    return x + y;
}

function fSUB (x, y) {
    return x - y;
}

function fMUL (x, y) {
    return x * y;
}

function fDIV (x, y) {
    return x / y;
}

console.log("fSUM", fSUM(a, b));
console.log("fSUB", fSUB(a, b));
console.log("fMUL", fMUL(a, b));
console.log("fDIV", fDIV(a, b));

//-------------------------------------------------------------------------------------------------------------------
//6) Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 5) и вернуть полученное значение (использовать switch).

function mathOperation(arg1, arg2, operation) {
    switch (operation) {
        case "+":
            return fSUM (arg1, arg2);
        case "-":
            return fSUB (arg1, arg2);
        case "*":
            return fMUL (arg1, arg2);
        case "/":
            return fDIV (arg1, arg2);
    }
}

console.log("mathOperation:", mathOperation(a, b, "*"));

//-------------------------------------------------------------------------------------------------------------------
//7) * Сравнить null и 0. Попробуйте объяснить результат.

console.log(0 == null);

//Тюбик зубной пасты:  0 - это кода в тюбике нет пасты. Null - это когда нет не только пасты, но и тюбика.

//-------------------------------------------------------------------------------------------------------------------
//8) * С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power(val, pow), где val – заданное число, pow – степень.
//челендж принят

var q = 5;
var iPow = 4;

console.log("Проверка:", Math.pow(q,iPow));

function power(val, pow) {
    if (pow > 1) {
        return val * power(val ,--pow);
     }
    return val;
}

console.log("Ответ:", power(q, iPow));






